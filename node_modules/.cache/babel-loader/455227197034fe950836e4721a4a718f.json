{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\table\\\\src\\\\components\\\\Table\\\\Component.tsx\";\nimport React from 'react';\nimport { Table } from './Table';\nimport { words, columnsWord } from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Component = () => {\n  function onChangeValue(x) {\n    const cloneData = words.concat();\n\n    if (x === 'Word') {\n      setSortedItems(cloneData.sort((a, b) => a.word < b.word ? -1 : 1));\n    } else if (x === 'Translation') {\n      setSortedItems(cloneData.sort((a, b) => a.translation < b.translation ? -1 : 1));\n    } else if (x === 'Frequency') {\n      setSortedItems(cloneData.sort((a, b) => a.frequency < b.frequency ? -1 : 1));\n    } else if (x === 'Date') {\n      setSortedItems(cloneData.sort((a, b) => a.translation < b.translation ? -1 : 1));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      onChangeValue: onChangeValue,\n      data: sortedItems,\n      columns: columnsWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Component;\nexport default Component;\n\nvar _c;\n\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["React","Table","words","columnsWord","Component","onChangeValue","x","cloneData","concat","setSortedItems","sort","a","b","word","translation","frequency","sortedItems"],"sources":["C:/Users/LENOVO/Desktop/table/src/components/Table/Component.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Table } from './Table';\r\nimport { words, columnsWord } from './data';\r\nimport { useState } from 'react';\r\nimport { WordInfo } from './data';\r\n\r\nconst Component: React.FC = () => {\r\n\r\n  \r\n\r\n    function onChangeValue(x: string) {\r\n        const cloneData = words.concat();\r\n        if (x === 'Word') {\r\n            setSortedItems(cloneData.sort((a, b) => a.word < b.word ? -1 : 1))\r\n        } else if (x === 'Translation') {\r\n            setSortedItems(cloneData.sort((a, b) => a.translation < b.translation ? -1 : 1))\r\n        } else if (x === 'Frequency') {\r\n            setSortedItems(cloneData.sort((a, b) => a.frequency < b.frequency ? -1 : 1))\r\n        } else if (x === 'Date') {\r\n            setSortedItems(cloneData.sort((a, b) => a.translation < b.translation ? -1 : 1))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table\r\n                onChangeValue={onChangeValue}\r\n                data={sortedItems}\r\n                columns={columnsWord}\r\n            />\r\n            {/* <Table\r\n                data={users}\r\n                columns={columnsUser}\r\n            /> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Component;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,QAAnC;;;AAIA,MAAMC,SAAmB,GAAG,MAAM;EAI9B,SAASC,aAAT,CAAuBC,CAAvB,EAAkC;IAC9B,MAAMC,SAAS,GAAGL,KAAK,CAACM,MAAN,EAAlB;;IACA,IAAIF,CAAC,KAAK,MAAV,EAAkB;MACdG,cAAc,CAACF,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAC,CAAnB,GAAuB,CAAhD,CAAD,CAAd;IACH,CAFD,MAEO,IAAIP,CAAC,KAAK,aAAV,EAAyB;MAC5BG,cAAc,CAACF,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,WAAF,GAAgBF,CAAC,CAACE,WAAlB,GAAgC,CAAC,CAAjC,GAAqC,CAA9D,CAAD,CAAd;IACH,CAFM,MAEA,IAAIR,CAAC,KAAK,WAAV,EAAuB;MAC1BG,cAAc,CAACF,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,SAAF,GAAcH,CAAC,CAACG,SAAhB,GAA4B,CAAC,CAA7B,GAAiC,CAA1D,CAAD,CAAd;IACH,CAFM,MAEA,IAAIT,CAAC,KAAK,MAAV,EAAkB;MACrBG,cAAc,CAACF,SAAS,CAACG,IAAV,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACG,WAAF,GAAgBF,CAAC,CAACE,WAAlB,GAAgC,CAAC,CAAjC,GAAqC,CAA9D,CAAD,CAAd;IACH;EACJ;;EAED,oBACI;IAAA,uBACI,QAAC,KAAD;MACI,aAAa,EAAET,aADnB;MAEI,IAAI,EAAEW,WAFV;MAGI,OAAO,EAAEb;IAHb;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CA9BD;;KAAMC,S;AAgCN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}