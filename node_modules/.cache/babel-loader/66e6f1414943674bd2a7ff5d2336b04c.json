{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Desktop\\\\table\\\\src\\\\components\\\\Table\\\\Table.tsx\";\nimport React from \"react\";\nimport './Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Table(props) {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: props.columns.map(column => {\n        return /*#__PURE__*/_jsxDEV(\"th\", {\n          onC: true,\n          children: [\" \", column.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), props.data.map(word => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: props.columns.map(column => {\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            children: column.render(word)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","Table","props","columns","map","column","title","data","word","render"],"sources":["C:/Users/LENOVO/Desktop/table/src/components/Table/Table.tsx"],"sourcesContent":["import React from \"react\";\r\nimport './Table.css'\r\n\r\nexport interface Column<T> {\r\n    title: string;\r\n    render: (w: T) => string;\r\n}\r\n\r\ninterface PropsType<T> {\r\n    data: T[];\r\n    columns: Column<T>[];\r\n}\r\n\r\nexport function Table <T>(props: PropsType<T>) {\r\n    return (\r\n        <table>\r\n            <tr>\r\n                {props.columns.map((column) => {\r\n                    return <th onC> {column.title}</th>;\r\n                })}\r\n            </tr>\r\n\r\n            {props.data.map((word) => {\r\n                return (\r\n                    <tr>\r\n                        {props.columns.map((column) => {\r\n                            return <td>{column.render(word)}</td>;\r\n                        })}\r\n                    </tr>\r\n                );\r\n            })}\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAYA,OAAO,SAASC,KAAT,CAAmBC,KAAnB,EAAwC;EAC3C,oBACI;IAAA,wBACI;MAAA,UACKA,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;QAC3B,oBAAO;UAAI,GAAG,MAAP;UAAA,gBAAUA,MAAM,CAACC,KAAjB;QAAA;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,EAOKJ,KAAK,CAACK,IAAN,CAAWH,GAAX,CAAgBI,IAAD,IAAU;MACtB,oBACI;QAAA,UACKN,KAAK,CAACC,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;UAC3B,oBAAO;YAAA,UAAKA,MAAM,CAACI,MAAP,CAAcD,IAAd;UAAL;YAAA;YAAA;YAAA;UAAA,QAAP;QACH,CAFA;MADL;QAAA;QAAA;QAAA;MAAA,QADJ;IAOH,CARA,CAPL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;KApBeP,K;AAsBhB,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}